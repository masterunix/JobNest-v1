{"ast":null,"code":"var _jsxFileName = \"/Users/vatsalgoyal/Desktop/Projects/JobNest/frontend/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requireAuth = true,\n  allowedRoles = []\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    user\n  } = useAuth();\n\n  // If authentication is not required, render children\n  if (!requireAuth) {\n    return children;\n  }\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If specific roles are required, check if user has the required role\n  if (allowedRoles.length > 0 && user && !allowedRoles.includes(user.role)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If all checks pass, render children\n  return children;\n};\n_s(ProtectedRoute, \"zqOjhT7Uiy3zlq7M7mfKh34T04g=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","requireAuth","allowedRoles","_s","isAuthenticated","user","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","length","includes","role","_c","$RefreshReg$"],"sources":["/Users/vatsalgoyal/Desktop/Projects/JobNest/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst ProtectedRoute = ({ children, requireAuth = true, allowedRoles = [] }) => {\n  const { isAuthenticated, user } = useAuth();\n\n  // If authentication is not required, render children\n  if (!requireAuth) {\n    return children;\n  }\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // If specific roles are required, check if user has the required role\n  if (allowedRoles.length > 0 && user && !allowedRoles.includes(user.role)) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  // If all checks pass, render children\n  return children;\n};\n\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW,GAAG,IAAI;EAAEC,YAAY,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAM;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGT,OAAO,CAAC,CAAC;;EAE3C;EACA,IAAI,CAACK,WAAW,EAAE;IAChB,OAAOD,QAAQ;EACjB;;EAEA;EACA,IAAI,CAACI,eAAe,EAAE;IACpB,oBAAON,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIT,YAAY,CAACU,MAAM,GAAG,CAAC,IAAIP,IAAI,IAAI,CAACH,YAAY,CAACW,QAAQ,CAACR,IAAI,CAACS,IAAI,CAAC,EAAE;IACxE,oBAAOhB,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,OAAOX,QAAQ;AACjB,CAAC;AAACG,EAAA,CApBIJ,cAAc;EAAA,QACgBH,OAAO;AAAA;AAAAmB,EAAA,GADrChB,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}