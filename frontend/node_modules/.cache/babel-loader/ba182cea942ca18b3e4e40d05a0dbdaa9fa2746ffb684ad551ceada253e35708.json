{"ast":null,"code":"var _jsxFileName = \"/Users/vatsalgoyal/Desktop/Projects/JobNest/frontend/src/contexts/ModeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModeContext = /*#__PURE__*/createContext();\nexport const ModeProvider = ({\n  children\n}) => {\n  _s();\n  const [mode, setMode] = useState(localStorage.getItem('mode') || 'jobseeker');\n  const [darkMode, setDarkMode] = useState(localStorage.getItem('darkMode') === 'true' || !localStorage.getItem('darkMode') && window.matchMedia('(prefers-color-scheme: dark)').matches);\n  const updateMode = newMode => {\n    setMode(newMode);\n    localStorage.setItem('mode', newMode);\n  };\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', newDarkMode.toString());\n  };\n\n  // Apply dark mode class to document\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(ModeContext.Provider, {\n    value: {\n      mode,\n      setMode: updateMode,\n      darkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeProvider, \"szlk4dXDJChbvjmw+fhjGjOBO/4=\");\n_c = ModeProvider;\nexport const useMode = () => {\n  _s2();\n  return useContext(ModeContext);\n};\n_s2(useMode, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ModeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ModeContext","ModeProvider","children","_s","mode","setMode","localStorage","getItem","darkMode","setDarkMode","window","matchMedia","matches","updateMode","newMode","setItem","toggleDarkMode","newDarkMode","toString","document","documentElement","classList","add","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useMode","_s2","$RefreshReg$"],"sources":["/Users/vatsalgoyal/Desktop/Projects/JobNest/frontend/src/contexts/ModeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ModeContext = createContext();\n\nexport const ModeProvider = ({ children }) => {\n  const [mode, setMode] = useState(\n    localStorage.getItem('mode') || 'jobseeker'\n  );\n  const [darkMode, setDarkMode] = useState(\n    localStorage.getItem('darkMode') === 'true' || \n    (!localStorage.getItem('darkMode') && window.matchMedia('(prefers-color-scheme: dark)').matches)\n  );\n\n  const updateMode = (newMode) => {\n    setMode(newMode);\n    localStorage.setItem('mode', newMode);\n  };\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', newDarkMode.toString());\n  };\n\n  // Apply dark mode class to document\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [darkMode]);\n\n  return (\n    <ModeContext.Provider value={{ \n      mode, \n      setMode: updateMode, \n      darkMode, \n      toggleDarkMode \n    }}>\n      {children}\n    </ModeContext.Provider>\n  );\n};\n\nexport const useMode = () => useContext(ModeContext); "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAC9BU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,WAClC,CAAC;EACD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CACtCU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM,IAC1C,CAACD,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAIG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAC1F,CAAC;EAED,MAAMC,UAAU,GAAIC,OAAO,IAAK;IAC9BT,OAAO,CAACS,OAAO,CAAC;IAChBR,YAAY,CAACS,OAAO,CAAC,MAAM,EAAED,OAAO,CAAC;EACvC,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,WAAW,GAAG,CAACT,QAAQ;IAC7BC,WAAW,CAACQ,WAAW,CAAC;IACxBX,YAAY,CAACS,OAAO,CAAC,UAAU,EAAEE,WAAW,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC1D,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,EAAE;MACZW,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,oBACET,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAC3BrB,IAAI;MACJC,OAAO,EAAEQ,UAAU;MACnBL,QAAQ;MACRQ;IACF,CAAE;IAAAd,QAAA,EACCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,EAAA,CAvCWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAyCzB,OAAO,MAAM8B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACK,WAAW,CAAC;AAAA;AAACgC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}