{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ModeContext=/*#__PURE__*/createContext();export const ModeProvider=_ref=>{let{children}=_ref;const[mode,setMode]=useState(localStorage.getItem('mode')||'jobseeker');const updateMode=newMode=>{setMode(newMode);localStorage.setItem('mode',newMode);};return/*#__PURE__*/_jsx(ModeContext.Provider,{value:{mode,setMode:updateMode},children:children});};export const useMode=()=>useContext(ModeContext);","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","ModeContext","ModeProvider","_ref","children","mode","setMode","localStorage","getItem","updateMode","newMode","setItem","Provider","value","useMode"],"sources":["/Users/vatsalgoyal/Desktop/Projects/JobNest/frontend/src/contexts/ModeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst ModeContext = createContext();\n\nexport const ModeProvider = ({ children }) => {\n  const [mode, setMode] = useState(\n    localStorage.getItem('mode') || 'jobseeker'\n  );\n\n  const updateMode = (newMode) => {\n    setMode(newMode);\n    localStorage.setItem('mode', newMode);\n  };\n\n  return (\n    <ModeContext.Provider value={{ mode, setMode: updateMode }}>\n      {children}\n    </ModeContext.Provider>\n  );\n};\n\nexport const useMode = () => useContext(ModeContext); "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAC9BS,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAI,WAClC,CAAC,CAED,KAAM,CAAAC,UAAU,CAAIC,OAAO,EAAK,CAC9BJ,OAAO,CAACI,OAAO,CAAC,CAChBH,YAAY,CAACI,OAAO,CAAC,MAAM,CAAED,OAAO,CAAC,CACvC,CAAC,CAED,mBACEV,IAAA,CAACC,WAAW,CAACW,QAAQ,EAACC,KAAK,CAAE,CAAER,IAAI,CAAEC,OAAO,CAAEG,UAAW,CAAE,CAAAL,QAAA,CACxDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAU,OAAO,CAAGA,CAAA,GAAMjB,UAAU,CAACI,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}