{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5001/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user') || 'null');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  if (user && user._id) {\n    config.headers['user-id'] = user._id;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Job API functions\nexport const jobAPI = {\n  // Get all jobs with filters\n  getJobs: (params = {}) => api.get('/jobs', {\n    params\n  }),\n  // Get single job\n  getJob: id => api.get(`/jobs/${id}`),\n  // Create job (employers only)\n  createJob: data => api.post('/jobs', data),\n  // Update job\n  updateJob: (id, data) => api.put(`/jobs/${id}`, data),\n  // Delete job\n  deleteJob: id => api.delete(`/jobs/${id}`),\n  // Apply for job\n  applyForJob: (id, data) => api.post(`/jobs/${id}/apply`, data)\n};\n\n// User API functions\nexport const userAPI = {\n  // Get user profile\n  getProfile: () => api.get('/users/profile'),\n  // Update profile\n  updateProfile: data => api.put('/users/profile', data),\n  // Change password\n  changePassword: data => api.put('/users/password', data),\n  // Get user applications\n  getApplications: () => api.get('/users/applications'),\n  // Get employer jobs\n  getEmployerJobs: () => api.get('/users/jobs'),\n  // Update application status\n  updateApplicationStatus: (jobId, applicationId, status) => api.put(`/users/jobs/${jobId}/applications/${applicationId}`, {\n    status\n  })\n};\n\n// Auth API functions\nexport const authAPI = {\n  // Register\n  register: data => api.post('/auth/register', data),\n  // Login\n  login: data => api.post('/auth/login', data),\n  // Get current user\n  getCurrentUser: () => api.get('/auth/me'),\n  // Forgot password\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","user","JSON","parse","Authorization","_id","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","jobAPI","getJobs","params","get","getJob","id","createJob","data","post","updateJob","put","deleteJob","delete","applyForJob","userAPI","getProfile","updateProfile","changePassword","getApplications","getEmployerJobs","updateApplicationStatus","jobId","applicationId","authAPI","register","login","getCurrentUser","forgotPassword","email"],"sources":["/Users/vatsalgoyal/Desktop/Projects/JobNest/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5001/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user') || 'null');\n    \n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    \n    if (user && user._id) {\n      config.headers['user-id'] = user._id;\n    }\n    \n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Job API functions\nexport const jobAPI = {\n  // Get all jobs with filters\n  getJobs: (params = {}) => api.get('/jobs', { params }),\n  \n  // Get single job\n  getJob: (id) => api.get(`/jobs/${id}`),\n  \n  // Create job (employers only)\n  createJob: (data) => api.post('/jobs', data),\n  \n  // Update job\n  updateJob: (id, data) => api.put(`/jobs/${id}`, data),\n  \n  // Delete job\n  deleteJob: (id) => api.delete(`/jobs/${id}`),\n  \n  // Apply for job\n  applyForJob: (id, data) => api.post(`/jobs/${id}/apply`, data),\n};\n\n// User API functions\nexport const userAPI = {\n  // Get user profile\n  getProfile: () => api.get('/users/profile'),\n  \n  // Update profile\n  updateProfile: (data) => api.put('/users/profile', data),\n  \n  // Change password\n  changePassword: (data) => api.put('/users/password', data),\n  \n  // Get user applications\n  getApplications: () => api.get('/users/applications'),\n  \n  // Get employer jobs\n  getEmployerJobs: () => api.get('/users/jobs'),\n  \n  // Update application status\n  updateApplicationStatus: (jobId, applicationId, status) => \n    api.put(`/users/jobs/${jobId}/applications/${applicationId}`, { status }),\n};\n\n// Auth API functions\nexport const authAPI = {\n  // Register\n  register: (data) => api.post('/auth/register', data),\n  \n  // Login\n  login: (data) => api.post('/auth/login', data),\n  \n  // Get current user\n  getCurrentUser: () => api.get('/auth/me'),\n  \n  // Forgot password\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}