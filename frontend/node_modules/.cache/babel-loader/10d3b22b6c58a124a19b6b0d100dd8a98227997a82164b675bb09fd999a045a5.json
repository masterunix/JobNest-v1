{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ModeContext=/*#__PURE__*/createContext();export const ModeProvider=_ref=>{let{children}=_ref;const[mode,setMode]=useState(localStorage.getItem('mode')||'jobseeker');const[darkMode,setDarkMode]=useState(localStorage.getItem('darkMode')==='true'||!localStorage.getItem('darkMode')&&window.matchMedia('(prefers-color-scheme: dark)').matches);const updateMode=newMode=>{setMode(newMode);localStorage.setItem('mode',newMode);};const toggleDarkMode=()=>{const newDarkMode=!darkMode;setDarkMode(newDarkMode);localStorage.setItem('darkMode',newDarkMode.toString());};// Apply dark mode class to document\nuseEffect(()=>{if(darkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}},[darkMode]);return/*#__PURE__*/_jsx(ModeContext.Provider,{value:{mode,setMode:updateMode,darkMode,toggleDarkMode},children:children});};export const useMode=()=>useContext(ModeContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ModeContext","ModeProvider","_ref","children","mode","setMode","localStorage","getItem","darkMode","setDarkMode","window","matchMedia","matches","updateMode","newMode","setItem","toggleDarkMode","newDarkMode","toString","document","documentElement","classList","add","remove","Provider","value","useMode"],"sources":["/Users/vatsalgoyal/Desktop/Projects/JobNest/frontend/src/contexts/ModeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ModeContext = createContext();\n\nexport const ModeProvider = ({ children }) => {\n  const [mode, setMode] = useState(\n    localStorage.getItem('mode') || 'jobseeker'\n  );\n  const [darkMode, setDarkMode] = useState(\n    localStorage.getItem('darkMode') === 'true' || \n    (!localStorage.getItem('darkMode') && window.matchMedia('(prefers-color-scheme: dark)').matches)\n  );\n\n  const updateMode = (newMode) => {\n    setMode(newMode);\n    localStorage.setItem('mode', newMode);\n  };\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', newDarkMode.toString());\n  };\n\n  // Apply dark mode class to document\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [darkMode]);\n\n  return (\n    <ModeContext.Provider value={{ \n      mode, \n      setMode: updateMode, \n      darkMode, \n      toggleDarkMode \n    }}>\n      {children}\n    </ModeContext.Provider>\n  );\n};\n\nexport const useMode = () => useContext(ModeContext); "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAC9BU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAI,WAClC,CAAC,CACD,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CACtCU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAK,MAAM,EAC1C,CAACD,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAIG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAC1F,CAAC,CAED,KAAM,CAAAC,UAAU,CAAIC,OAAO,EAAK,CAC9BT,OAAO,CAACS,OAAO,CAAC,CAChBR,YAAY,CAACS,OAAO,CAAC,MAAM,CAAED,OAAO,CAAC,CACvC,CAAC,CAED,KAAM,CAAAE,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,WAAW,CAAG,CAACT,QAAQ,CAC7BC,WAAW,CAACQ,WAAW,CAAC,CACxBX,YAAY,CAACS,OAAO,CAAC,UAAU,CAAEE,WAAW,CAACC,QAAQ,CAAC,CAAC,CAAC,CAC1D,CAAC,CAED;AACArB,SAAS,CAAC,IAAM,CACd,GAAIW,QAAQ,CAAE,CACZW,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAChD,CAAC,IAAM,CACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CACnD,CACF,CAAC,CAAE,CAACf,QAAQ,CAAC,CAAC,CAEd,mBACET,IAAA,CAACC,WAAW,CAACwB,QAAQ,EAACC,KAAK,CAAE,CAC3BrB,IAAI,CACJC,OAAO,CAAEQ,UAAU,CACnBL,QAAQ,CACRQ,cACF,CAAE,CAAAb,QAAA,CACCA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAuB,OAAO,CAAGA,CAAA,GAAM/B,UAAU,CAACK,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}