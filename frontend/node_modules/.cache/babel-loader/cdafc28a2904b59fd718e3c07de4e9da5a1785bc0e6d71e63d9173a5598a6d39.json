{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();const initialState={user:null,token:localStorage.getItem('token'),isAuthenticated:false,loading:true,// Add a mock role for frontend testing\nmockRole:localStorage.getItem('mockRole')||'owner'// can be 'admin', 'owner', 'backer', 'jobseeker', 'employer'\n};const authReducer=(state,action)=>{switch(action.type){case'LOGIN_SUCCESS':localStorage.setItem('token',action.payload.token);return{...state,user:action.payload.user,token:action.payload.token,isAuthenticated:true,loading:false};case'LOGIN_FAIL':case'LOGOUT':localStorage.removeItem('token');return{...state,user:null,token:null,isAuthenticated:false,loading:false};case'USER_LOADED':return{...state,user:action.payload,isAuthenticated:true,loading:false};case'AUTH_ERROR':localStorage.removeItem('token');return{...state,user:null,token:null,isAuthenticated:false,loading:false};case'UPDATE_USER':return{...state,user:action.payload};default:return state;}};export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Set auth token header\nconst setAuthToken=token=>{if(token){var _state$user;axios.defaults.headers.common['Authorization']=`Bearer ${token}`;axios.defaults.headers.common['user-id']=(_state$user=state.user)===null||_state$user===void 0?void 0:_state$user._id;}else{delete axios.defaults.headers.common['Authorization'];delete axios.defaults.headers.common['user-id'];}};// Load user\nconst loadUser=async()=>{if(state.token){setAuthToken(state.token);try{const res=await axios.get('/api/auth/me');dispatch({type:'USER_LOADED',payload:res.data.user});}catch(err){dispatch({type:'AUTH_ERROR'});}}else{dispatch({type:'AUTH_ERROR'});}};// Register user\nconst register=async formData=>{try{const res=await axios.post('/api/auth/register',formData);dispatch({type:'LOGIN_SUCCESS',payload:res.data});return{success:true};}catch(err){var _err$response,_err$response$data;const error=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Registration failed';return{success:false,error};}};// Login user\nconst login=async formData=>{try{const res=await axios.post('/api/auth/login',formData);dispatch({type:'LOGIN_SUCCESS',payload:res.data});return{success:true};}catch(err){var _err$response2,_err$response2$data;const error=((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||'Login failed';return{success:false,error};}};// Logout user\nconst logout=()=>{dispatch({type:'LOGOUT'});// Clear axios headers\ndelete axios.defaults.headers.common['Authorization'];delete axios.defaults.headers.common['user-id'];// Redirect to home page\nwindow.location.href='/';};// Update user profile\nconst updateProfile=async formData=>{try{const res=await axios.put('/api/users/profile',formData);dispatch({type:'UPDATE_USER',payload:res.data.data});return{success:true};}catch(err){var _err$response3,_err$response3$data;const error=((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||'Profile update failed';return{success:false,error};}};// Change password\nconst changePassword=async formData=>{try{await axios.put('/api/users/password',formData);return{success:true};}catch(err){var _err$response4,_err$response4$data;const error=((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.message)||'Password change failed';return{success:false,error};}};// For frontend-only: allow switching mock role if no user is loaded\nconst setMockRole=role=>{localStorage.setItem('mockRole',role);window.location.reload();};useEffect(()=>{loadUser();},[]);useEffect(()=>{setAuthToken(state.token);},[state.token]);const value={user:state.user,token:state.token,isAuthenticated:state.isAuthenticated,loading:state.loading,register,login,logout,updateProfile,changePassword,setMockRole// for switching roles in the UI\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsx","_jsx","AuthContext","initialState","user","token","localStorage","getItem","isAuthenticated","loading","mockRole","authReducer","state","action","type","setItem","payload","removeItem","AuthProvider","_ref","children","dispatch","setAuthToken","_state$user","defaults","headers","common","_id","loadUser","res","get","data","err","register","formData","post","success","_err$response","_err$response$data","error","response","message","login","_err$response2","_err$response2$data","logout","window","location","href","updateProfile","put","_err$response3","_err$response3$data","changePassword","_err$response4","_err$response4$data","setMockRole","role","reload","value","Provider","useAuth","context","Error"],"sources":["/Users/vatsalgoyal/Desktop/Projects/JobNest/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  // Add a mock role for frontend testing\n  mockRole: localStorage.getItem('mockRole') || 'owner', // can be 'admin', 'owner', 'backer', 'jobseeker', 'employer'\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case 'LOGIN_FAIL':\n    case 'LOGOUT':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case 'AUTH_ERROR':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set auth token header\n  const setAuthToken = (token) => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      axios.defaults.headers.common['user-id'] = state.user?._id;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      delete axios.defaults.headers.common['user-id'];\n    }\n  };\n\n  // Load user\n  const loadUser = async () => {\n    if (state.token) {\n      setAuthToken(state.token);\n      try {\n        const res = await axios.get('/api/auth/me');\n        dispatch({ type: 'USER_LOADED', payload: res.data.user });\n      } catch (err) {\n        dispatch({ type: 'AUTH_ERROR' });\n      }\n    } else {\n      dispatch({ type: 'AUTH_ERROR' });\n    }\n  };\n\n  // Register user\n  const register = async (formData) => {\n    try {\n      const res = await axios.post('/api/auth/register', formData);\n      dispatch({ type: 'LOGIN_SUCCESS', payload: res.data });\n      return { success: true };\n    } catch (err) {\n      const error = err.response?.data?.message || 'Registration failed';\n      return { success: false, error };\n    }\n  };\n\n  // Login user\n  const login = async (formData) => {\n    try {\n      const res = await axios.post('/api/auth/login', formData);\n      dispatch({ type: 'LOGIN_SUCCESS', payload: res.data });\n      return { success: true };\n    } catch (err) {\n      const error = err.response?.data?.message || 'Login failed';\n      return { success: false, error };\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' });\n    // Clear axios headers\n    delete axios.defaults.headers.common['Authorization'];\n    delete axios.defaults.headers.common['user-id'];\n    // Redirect to home page\n    window.location.href = '/';\n  };\n\n  // Update user profile\n  const updateProfile = async (formData) => {\n    try {\n      const res = await axios.put('/api/users/profile', formData);\n      dispatch({ type: 'UPDATE_USER', payload: res.data.data });\n      return { success: true };\n    } catch (err) {\n      const error = err.response?.data?.message || 'Profile update failed';\n      return { success: false, error };\n    }\n  };\n\n  // Change password\n  const changePassword = async (formData) => {\n    try {\n      await axios.put('/api/users/password', formData);\n      return { success: true };\n    } catch (err) {\n      const error = err.response?.data?.message || 'Password change failed';\n      return { success: false, error };\n    }\n  };\n\n  // For frontend-only: allow switching mock role if no user is loaded\n  const setMockRole = (role) => {\n    localStorage.setItem('mockRole', role);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  useEffect(() => {\n    setAuthToken(state.token);\n  }, [state.token]);\n\n  const value = {\n    user: state.user,\n    token: state.token,\n    isAuthenticated: state.isAuthenticated,\n    loading: state.loading,\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    setMockRole, // for switching roles in the UI\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC/E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,KAAM,CAAAQ,YAAY,CAAG,CACnBC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACpCC,eAAe,CAAE,KAAK,CACtBC,OAAO,CAAE,IAAI,CACb;AACAC,QAAQ,CAAEJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAI,OAAS;AACzD,CAAC,CAED,KAAM,CAAAI,WAAW,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACrC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,eAAe,CAClBR,YAAY,CAACS,OAAO,CAAC,OAAO,CAAEF,MAAM,CAACG,OAAO,CAACX,KAAK,CAAC,CACnD,MAAO,CACL,GAAGO,KAAK,CACRR,IAAI,CAAES,MAAM,CAACG,OAAO,CAACZ,IAAI,CACzBC,KAAK,CAAEQ,MAAM,CAACG,OAAO,CAACX,KAAK,CAC3BG,eAAe,CAAE,IAAI,CACrBC,OAAO,CAAE,KACX,CAAC,CACH,IAAK,YAAY,CACjB,IAAK,QAAQ,CACXH,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC,CAChC,MAAO,CACL,GAAGL,KAAK,CACRR,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXG,eAAe,CAAE,KAAK,CACtBC,OAAO,CAAE,KACX,CAAC,CACH,IAAK,aAAa,CAChB,MAAO,CACL,GAAGG,KAAK,CACRR,IAAI,CAAES,MAAM,CAACG,OAAO,CACpBR,eAAe,CAAE,IAAI,CACrBC,OAAO,CAAE,KACX,CAAC,CACH,IAAK,YAAY,CACfH,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC,CAChC,MAAO,CACL,GAAGL,KAAK,CACRR,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXG,eAAe,CAAE,KAAK,CACtBC,OAAO,CAAE,KACX,CAAC,CACH,IAAK,aAAa,CAChB,MAAO,CACL,GAAGG,KAAK,CACRR,IAAI,CAAES,MAAM,CAACG,OACf,CAAC,CACH,QACE,MAAO,CAAAJ,KAAK,CAChB,CACF,CAAC,CAED,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACP,KAAK,CAAES,QAAQ,CAAC,CAAGxB,UAAU,CAACc,WAAW,CAAER,YAAY,CAAC,CAE/D;AACA,KAAM,CAAAmB,YAAY,CAAIjB,KAAK,EAAK,CAC9B,GAAIA,KAAK,CAAE,KAAAkB,WAAA,CACTxB,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CAAG,UAAUrB,KAAK,EAAE,CAClEN,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,SAAS,CAAC,EAAAH,WAAA,CAAGX,KAAK,CAACR,IAAI,UAAAmB,WAAA,iBAAVA,WAAA,CAAYI,GAAG,CAC5D,CAAC,IAAM,CACL,MAAO,CAAA5B,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CACrD,MAAO,CAAA3B,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,SAAS,CAAC,CACjD,CACF,CAAC,CAED;AACA,KAAM,CAAAE,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAIhB,KAAK,CAACP,KAAK,CAAE,CACfiB,YAAY,CAACV,KAAK,CAACP,KAAK,CAAC,CACzB,GAAI,CACF,KAAM,CAAAwB,GAAG,CAAG,KAAM,CAAA9B,KAAK,CAAC+B,GAAG,CAAC,cAAc,CAAC,CAC3CT,QAAQ,CAAC,CAAEP,IAAI,CAAE,aAAa,CAAEE,OAAO,CAAEa,GAAG,CAACE,IAAI,CAAC3B,IAAK,CAAC,CAAC,CAC3D,CAAE,MAAO4B,GAAG,CAAE,CACZX,QAAQ,CAAC,CAAEP,IAAI,CAAE,YAAa,CAAC,CAAC,CAClC,CACF,CAAC,IAAM,CACLO,QAAQ,CAAC,CAAEP,IAAI,CAAE,YAAa,CAAC,CAAC,CAClC,CACF,CAAC,CAED;AACA,KAAM,CAAAmB,QAAQ,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACnC,GAAI,CACF,KAAM,CAAAL,GAAG,CAAG,KAAM,CAAA9B,KAAK,CAACoC,IAAI,CAAC,oBAAoB,CAAED,QAAQ,CAAC,CAC5Db,QAAQ,CAAC,CAAEP,IAAI,CAAE,eAAe,CAAEE,OAAO,CAAEa,GAAG,CAACE,IAAK,CAAC,CAAC,CACtD,MAAO,CAAEK,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOJ,GAAG,CAAE,KAAAK,aAAA,CAAAC,kBAAA,CACZ,KAAM,CAAAC,KAAK,CAAG,EAAAF,aAAA,CAAAL,GAAG,CAACQ,QAAQ,UAAAH,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAcN,IAAI,UAAAO,kBAAA,iBAAlBA,kBAAA,CAAoBG,OAAO,GAAI,qBAAqB,CAClE,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAEG,KAAM,CAAC,CAClC,CACF,CAAC,CAED;AACA,KAAM,CAAAG,KAAK,CAAG,KAAO,CAAAR,QAAQ,EAAK,CAChC,GAAI,CACF,KAAM,CAAAL,GAAG,CAAG,KAAM,CAAA9B,KAAK,CAACoC,IAAI,CAAC,iBAAiB,CAAED,QAAQ,CAAC,CACzDb,QAAQ,CAAC,CAAEP,IAAI,CAAE,eAAe,CAAEE,OAAO,CAAEa,GAAG,CAACE,IAAK,CAAC,CAAC,CACtD,MAAO,CAAEK,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOJ,GAAG,CAAE,KAAAW,cAAA,CAAAC,mBAAA,CACZ,KAAM,CAAAL,KAAK,CAAG,EAAAI,cAAA,CAAAX,GAAG,CAACQ,QAAQ,UAAAG,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcZ,IAAI,UAAAa,mBAAA,iBAAlBA,mBAAA,CAAoBH,OAAO,GAAI,cAAc,CAC3D,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAEG,KAAM,CAAC,CAClC,CACF,CAAC,CAED;AACA,KAAM,CAAAM,MAAM,CAAGA,CAAA,GAAM,CACnBxB,QAAQ,CAAC,CAAEP,IAAI,CAAE,QAAS,CAAC,CAAC,CAC5B;AACA,MAAO,CAAAf,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CACrD,MAAO,CAAA3B,KAAK,CAACyB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,SAAS,CAAC,CAC/C;AACAoB,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,GAAG,CAC5B,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAG,KAAO,CAAAf,QAAQ,EAAK,CACxC,GAAI,CACF,KAAM,CAAAL,GAAG,CAAG,KAAM,CAAA9B,KAAK,CAACmD,GAAG,CAAC,oBAAoB,CAAEhB,QAAQ,CAAC,CAC3Db,QAAQ,CAAC,CAAEP,IAAI,CAAE,aAAa,CAAEE,OAAO,CAAEa,GAAG,CAACE,IAAI,CAACA,IAAK,CAAC,CAAC,CACzD,MAAO,CAAEK,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOJ,GAAG,CAAE,KAAAmB,cAAA,CAAAC,mBAAA,CACZ,KAAM,CAAAb,KAAK,CAAG,EAAAY,cAAA,CAAAnB,GAAG,CAACQ,QAAQ,UAAAW,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcpB,IAAI,UAAAqB,mBAAA,iBAAlBA,mBAAA,CAAoBX,OAAO,GAAI,uBAAuB,CACpE,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAEG,KAAM,CAAC,CAClC,CACF,CAAC,CAED;AACA,KAAM,CAAAc,cAAc,CAAG,KAAO,CAAAnB,QAAQ,EAAK,CACzC,GAAI,CACF,KAAM,CAAAnC,KAAK,CAACmD,GAAG,CAAC,qBAAqB,CAAEhB,QAAQ,CAAC,CAChD,MAAO,CAAEE,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOJ,GAAG,CAAE,KAAAsB,cAAA,CAAAC,mBAAA,CACZ,KAAM,CAAAhB,KAAK,CAAG,EAAAe,cAAA,CAAAtB,GAAG,CAACQ,QAAQ,UAAAc,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcvB,IAAI,UAAAwB,mBAAA,iBAAlBA,mBAAA,CAAoBd,OAAO,GAAI,wBAAwB,CACrE,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAEG,KAAM,CAAC,CAClC,CACF,CAAC,CAED;AACA,KAAM,CAAAiB,WAAW,CAAIC,IAAI,EAAK,CAC5BnD,YAAY,CAACS,OAAO,CAAC,UAAU,CAAE0C,IAAI,CAAC,CACtCX,MAAM,CAACC,QAAQ,CAACW,MAAM,CAAC,CAAC,CAC1B,CAAC,CAED5D,SAAS,CAAC,IAAM,CACd8B,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN9B,SAAS,CAAC,IAAM,CACdwB,YAAY,CAACV,KAAK,CAACP,KAAK,CAAC,CAC3B,CAAC,CAAE,CAACO,KAAK,CAACP,KAAK,CAAC,CAAC,CAEjB,KAAM,CAAAsD,KAAK,CAAG,CACZvD,IAAI,CAAEQ,KAAK,CAACR,IAAI,CAChBC,KAAK,CAAEO,KAAK,CAACP,KAAK,CAClBG,eAAe,CAAEI,KAAK,CAACJ,eAAe,CACtCC,OAAO,CAAEG,KAAK,CAACH,OAAO,CACtBwB,QAAQ,CACRS,KAAK,CACLG,MAAM,CACNI,aAAa,CACbI,cAAc,CACdG,WAAa;AACf,CAAC,CAED,mBAAOvD,IAAA,CAACC,WAAW,CAAC0D,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAvC,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAC9E,CAAC,CAED,MAAO,MAAM,CAAAyC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGlE,UAAU,CAACM,WAAW,CAAC,CACvC,GAAI,CAAC4D,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}